{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,6LAAC,8KAAA,CAAA,OAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;KAJS;AAMT,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,6LAAC,8KAAA,CAAA,UAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;MANS;AAQT,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,6LAAC,8KAAA,CAAA,SAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;MANS;AAQT,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,6LAAC,8KAAA,CAAA,UAA4B;QAC3B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,8KAAA,CAAA,UAA4B;gBAC3B,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;MAjBS;AAmBT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,6LAAC,8KAAA,CAAA,QAA0B;QACzB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,6LAAC,8KAAA,CAAA,cAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf;OAVS","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8DACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;QACxC,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,6LAAC,qKAAA,CAAA,WAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DungeonEvent.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar'\nimport { Users, Trophy, Gift, Zap, Clock, Star, Flame, Shield, Sword } from 'lucide-react'\nimport Image from 'next/image'\n\ninterface TeamMember {\n  id: string\n  username: string\n  level: number\n  primaryStat: string\n  avatar: string\n}\n\ninterface DungeonChallenge {\n  id: string\n  name: string\n  description: string\n  difficulty: 'normal' | 'hard' | 'nightmare'\n  minLevel: number\n  minTeamSize: number\n  maxTeamSize: number\n  xpReward: number\n  lootPool: string[]\n  duration: string\n  requirements: string[]\n}\n\ninterface DungeonEventProps {\n  challenge: DungeonChallenge\n  team: TeamMember[]\n  onComplete: () => void\n}\n\nconst challengeImages = {\n  'Crystal Caverns': 'https://images.pexels.com/photos/1666021/pexels-photo-1666021.jpeg',\n  'Dragon\\'s Lair': 'https://images.pexels.com/photos/1671325/pexels-photo-1671325.jpeg',\n  'Nightmare Realm': 'https://images.pexels.com/photos/1169754/pexels-photo-1169754.jpeg'\n}\n\nconst phases = [\n  { name: 'Team Assembly', description: 'Getting to know your teammates', duration: 30 },\n  { name: 'Challenge Briefing', description: 'Understanding the mission', duration: 20 },\n  { name: 'Main Challenge', description: 'The core adventure begins', duration: 60 },\n  { name: 'Final Boss', description: 'Face the ultimate test', duration: 40 },\n  { name: 'Loot Distribution', description: 'Claim your rewards', duration: 10 }\n]\n\nexport default function DungeonEvent({ challenge, team, onComplete }: DungeonEventProps) {\n  const [currentPhase, setCurrentPhase] = useState(0)\n  const [phaseProgress, setPhaseProgress] = useState(0)\n  const [isActive, setIsActive] = useState(false)\n  const [completedChallenges, setCompletedChallenges] = useState<string[]>([])\n\n  useEffect(() => {\n    if (!isActive) return\n\n    const interval = setInterval(() => {\n      setPhaseProgress(prev => {\n        if (prev >= 100) {\n          if (currentPhase < phases.length - 1) {\n            setCurrentPhase(curr => curr + 1)\n            return 0\n          } else {\n            setIsActive(false)\n            return 100\n          }\n        }\n        return prev + (100 / phases[currentPhase].duration) // Progress based on phase duration\n      })\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [isActive, currentPhase])\n\n  const startChallenge = () => {\n    setIsActive(true)\n    setCurrentPhase(0)\n    setPhaseProgress(0)\n  }\n\n  const handleChallengeComplete = (challengeName: string) => {\n    setCompletedChallenges(prev => [...prev, challengeName])\n  }\n\n  const miniChallenges = [\n    { name: 'Puzzle Solving', description: 'Work together to solve ancient riddles', icon: '🧩' },\n    { name: 'Team Coordination', description: 'Navigate obstacles as a group', icon: '🤝' },\n    { name: 'Resource Management', description: 'Allocate limited resources wisely', icon: '⚖️' },\n    { name: 'Strategic Planning', description: 'Plan your approach to the final boss', icon: '🎯' }\n  ]\n\n  const backgroundImage = challengeImages[challenge.name as keyof typeof challengeImages] || challengeImages['Crystal Caverns']\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Challenge Header */}\n      <Card className=\"bg-black/40 border-white/10 text-white overflow-hidden\">\n        <div className=\"relative h-48\">\n          <Image\n            src={backgroundImage}\n            alt={challenge.name}\n            fill\n            className=\"object-cover\"\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 to-black/20\" />\n          <div className=\"absolute bottom-4 left-4 right-4\">\n            <h2 className=\"text-3xl font-bold mb-2\">{challenge.name}</h2>\n            <p className=\"text-gray-200\">{challenge.description}</p>\n          </div>\n        </div>\n      </Card>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Team Panel */}\n        <Card className=\"bg-black/40 border-white/10 text-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Users className=\"w-5 h-5 text-blue-400\" />\n              <span>Your Team</span>\n            </CardTitle>\n            <CardDescription className=\"text-gray-300\">\n              {team.length} adventurers ready for action\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {team.map((member) => (\n              <div key={member.id} className=\"flex items-center space-x-3 p-3 rounded-lg bg-white/5\">\n                <Avatar className=\"w-10 h-10\">\n                  <AvatarFallback className=\"bg-gradient-to-r from-purple-500 to-pink-500 text-white\">\n                    {member.username.slice(0, 2).toUpperCase()}\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-semibold\">\n                    {member.username}\n                    {member.username === 'Player' && (\n                      <span className=\"ml-2 text-xs text-purple-400\">(You)</span>\n                    )}\n                  </h4>\n                  <p className=\"text-sm text-gray-400\">\n                    Level {member.level} • {member.primaryStat.charAt(0).toUpperCase() + member.primaryStat.slice(1)}\n                  </p>\n                </div>\n              </div>\n            ))}\n            \n            <div className=\"mt-4 p-3 rounded-lg bg-gradient-to-r from-blue-500/10 to-purple-500/10 border border-blue-500/20\">\n              <h4 className=\"font-semibold mb-2 text-blue-300\">Team Synergy</h4>\n              <div className=\"text-sm text-gray-300\">\n                <p>• Balanced skill distribution</p>\n                <p>• Strong communication potential</p>\n                <p>• Ready for {challenge.difficulty} difficulty</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Challenge Progress */}\n        <Card className=\"bg-black/40 border-white/10 text-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Flame className=\"w-5 h-5 text-orange-400\" />\n              <span>Challenge Progress</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {!isActive && currentPhase === 0 ? (\n              <div className=\"text-center space-y-4\">\n                <div className=\"w-16 h-16 mx-auto rounded-full bg-gradient-to-r from-red-500 to-orange-500 flex items-center justify-center\">\n                  <Sword className=\"w-8 h-8 text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-2\">Ready to Begin?</h3>\n                  <p className=\"text-sm text-gray-400 mb-4\">\n                    Your team is assembled and ready for the challenge!\n                  </p>\n                  <Button \n                    onClick={startChallenge}\n                    className=\"bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700\"\n                  >\n                    Start Challenge\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h3 className=\"font-semibold\">{phases[currentPhase]?.name}</h3>\n                    <Badge className=\"bg-orange-500/20 text-orange-300\">\n                      Phase {currentPhase + 1}/{phases.length}\n                    </Badge>\n                  </div>\n                  <p className=\"text-sm text-gray-400 mb-3\">\n                    {phases[currentPhase]?.description}\n                  </p>\n                  <Progress value={phaseProgress} className=\"h-3\" />\n                  <div className=\"flex justify-between text-xs text-gray-400 mt-1\">\n                    <span>Progress</span>\n                    <span>{Math.round(phaseProgress)}%</span>\n                  </div>\n                </div>\n\n                {currentPhase === phases.length - 1 && phaseProgress >= 100 && (\n                  <div className=\"text-center space-y-3\">\n                    <div className=\"w-12 h-12 mx-auto rounded-full bg-gradient-to-r from-yellow-500 to-orange-500 flex items-center justify-center\">\n                      <Trophy className=\"w-6 h-6 text-white\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-yellow-400\">Challenge Complete!</h3>\n                      <p className=\"text-sm text-gray-400 mb-3\">\n                        Congratulations! Your team has successfully completed the challenge.\n                      </p>\n                      <Button \n                        onClick={onComplete}\n                        className=\"bg-gradient-to-r from-yellow-600 to-orange-600 hover:from-yellow-700 hover:to-orange-700\"\n                      >\n                        <Gift className=\"w-4 h-4 mr-2\" />\n                        Claim Rewards\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Mini Challenges */}\n        <Card className=\"bg-black/40 border-white/10 text-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Star className=\"w-5 h-5 text-yellow-400\" />\n              <span>Challenge Tasks</span>\n            </CardTitle>\n            <CardDescription className=\"text-gray-300\">\n              Complete these to progress\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {miniChallenges.map((miniChallenge, index) => {\n              const isCompleted = completedChallenges.includes(miniChallenge.name)\n              const isActive = currentPhase > 1 && index <= currentPhase - 2\n              \n              return (\n                <div \n                  key={miniChallenge.name}\n                  className={`p-3 rounded-lg border transition-all ${\n                    isCompleted \n                      ? 'bg-green-500/20 border-green-500/30' \n                      : isActive \n                        ? 'bg-yellow-500/20 border-yellow-500/30' \n                        : 'bg-white/5 border-white/10'\n                  }`}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"text-2xl\">{miniChallenge.icon}</div>\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-sm\">{miniChallenge.name}</h4>\n                      <p className=\"text-xs text-gray-400\">{miniChallenge.description}</p>\n                    </div>\n                    {isCompleted && (\n                      <div className=\"w-6 h-6 rounded-full bg-green-500 flex items-center justify-center\">\n                        <span className=\"text-white text-xs\">✓</span>\n                      </div>\n                    )}\n                    {isActive && !isCompleted && (\n                      <Button \n                        size=\"sm\" \n                        onClick={() => handleChallengeComplete(miniChallenge.name)}\n                        className=\"bg-yellow-600 hover:bg-yellow-700 text-xs\"\n                      >\n                        Complete\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              )\n            })}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Rewards Preview */}\n      <Card className=\"bg-black/40 border-white/10 text-white\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Gift className=\"w-5 h-5 text-purple-400\" />\n            <span>Potential Rewards</span>\n          </CardTitle>\n          <CardDescription className=\"text-gray-300\">\n            What you could earn from this challenge\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-semibold mb-3\">Guaranteed Rewards</h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between p-2 rounded bg-white/5\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Zap className=\"w-4 h-4 text-yellow-400\" />\n                    <span>Experience Points</span>\n                  </div>\n                  <Badge className=\"bg-yellow-500/20 text-yellow-300\">\n                    +{challenge.xpReward} XP\n                  </Badge>\n                </div>\n                <div className=\"flex items-center justify-between p-2 rounded bg-white/5\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Trophy className=\"w-4 h-4 text-purple-400\" />\n                    <span>Team Achievement</span>\n                  </div>\n                  <Badge className=\"bg-purple-500/20 text-purple-300\">\n                    Badge\n                  </Badge>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-3\">Possible Loot</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {challenge.lootPool.map((item, index) => (\n                  <Badge \n                    key={index} \n                    variant=\"secondary\" \n                    className=\"bg-gradient-to-r from-purple-500/20 to-pink-500/20 text-purple-300 border-purple-500/30\"\n                  >\n                    {item}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1538, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dungeon/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useUser } from '@/context/UserContext'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '@/components/ui/alert-dialog'\nimport Link from 'next/link'\nimport { ArrowLeft, Sword, Shield, Users, Trophy, Gift, Zap, Crown, Star, Flame } from 'lucide-react'\nimport { toast } from 'sonner'\nimport DungeonEvent from '@/components/DungeonEvent'\n\ninterface TeamMember {\n  id: string\n  username: string\n  level: number\n  primaryStat: string\n  avatar: string\n}\n\ninterface DungeonChallenge {\n  id: string\n  name: string\n  description: string\n  difficulty: 'normal' | 'hard' | 'nightmare'\n  minLevel: number\n  minTeamSize: number\n  maxTeamSize: number\n  xpReward: number\n  lootPool: string[]\n  duration: string\n  requirements: string[]\n}\n\nconst mockChallenges: DungeonChallenge[] = [\n  {\n    id: '1',\n    name: 'Crystal Caverns',\n    description: 'Navigate through mystical caverns filled with puzzles and teamwork challenges. Perfect for beginners.',\n    difficulty: 'normal',\n    minLevel: 3,\n    minTeamSize: 3,\n    maxTeamSize: 6,\n    xpReward: 75,\n    lootPool: ['Crystal Badge', 'Team Spirit Pin', 'Wisdom Scroll'],\n    duration: '2 hours',\n    requirements: ['Basic problem-solving', 'Team communication']\n  },\n  {\n    id: '2',\n    name: 'Dragon\\'s Lair',\n    description: 'Face the ultimate challenge! Complex puzzles, physical tasks, and strategic thinking required.',\n    difficulty: 'hard',\n    minLevel: 8,\n    minTeamSize: 4,\n    maxTeamSize: 8,\n    xpReward: 150,\n    lootPool: ['Dragon Scale', 'Leadership Crown', 'Power Crystal', 'Epic Badge'],\n    duration: '4 hours',\n    requirements: ['Advanced strategy', 'Physical endurance', 'Leadership skills']\n  },\n  {\n    id: '3',\n    name: 'Nightmare Realm',\n    description: 'Only for the most experienced adventurers. Extreme challenges that test every skill.',\n    difficulty: 'nightmare',\n    minLevel: 15,\n    minTeamSize: 6,\n    maxTeamSize: 12,\n    xpReward: 300,\n    lootPool: ['Nightmare Crown', 'Legendary Artifact', 'Master\\'s Seal', 'Cosmic Badge'],\n    duration: '6 hours',\n    requirements: ['Master-level skills', 'Extreme endurance', 'Perfect teamwork']\n  }\n]\n\nconst difficultyColors = {\n  normal: 'bg-green-500/20 text-green-300 border-green-500/30',\n  hard: 'bg-orange-500/20 text-orange-300 border-orange-500/30',\n  nightmare: 'bg-red-500/20 text-red-300 border-red-500/30'\n}\n\nexport default function DungeonPage() {\n  const { user, addXP, addLoot } = useUser()\n  const [selectedChallenge, setSelectedChallenge] = useState<DungeonChallenge | null>(null)\n  const [currentTeam, setCurrentTeam] = useState<TeamMember[]>([])\n  const [isInDungeon, setIsInDungeon] = useState(false)\n\n  const canJoinChallenge = (challenge: DungeonChallenge) => {\n    if (user.level < challenge.minLevel) {\n      return { canJoin: false, reason: `Requires level ${challenge.minLevel}` }\n    }\n    return { canJoin: true, reason: '' }\n  }\n\n  const generateRandomTeam = (challenge: DungeonChallenge) => {\n    const teamSize = Math.floor(Math.random() * (challenge.maxTeamSize - challenge.minTeamSize + 1)) + challenge.minTeamSize\n    const mockUsers = [\n      'DragonSlayer99', 'MysticMage', 'ShadowNinja', 'FirePhoenix', 'IceQueen', \n      'ThunderBolt', 'StarGazer', 'CrystalHunter', 'StormRider', 'MoonWalker'\n    ]\n    \n    const team: TeamMember[] = []\n    for (let i = 0; i < teamSize - 1; i++) {\n      team.push({\n        id: `member-${i}`,\n        username: mockUsers[Math.floor(Math.random() * mockUsers.length)],\n        level: Math.floor(Math.random() * 10) + challenge.minLevel,\n        primaryStat: ['strength', 'intelligence', 'creativity', 'charisma'][Math.floor(Math.random() * 4)],\n        avatar: '🧙‍♂️'\n      })\n    }\n    \n    // Add current user\n    team.push({\n      id: user.id,\n      username: user.username,\n      level: user.level,\n      primaryStat: 'strength', // Could be calculated based on highest stat\n      avatar: '👤'\n    })\n    \n    return team\n  }\n\n  const handleJoinChallenge = (challenge: DungeonChallenge) => {\n    const { canJoin, reason } = canJoinChallenge(challenge)\n    \n    if (!canJoin) {\n      toast.error('Cannot join challenge', {\n        description: reason\n      })\n      return\n    }\n\n    const team = generateRandomTeam(challenge)\n    setCurrentTeam(team)\n    setSelectedChallenge(challenge)\n    setIsInDungeon(true)\n    \n    toast.success('Team assembled!', {\n      description: `You've been matched with ${team.length - 1} other adventurers.`,\n      icon: <Users className=\"w-4 h-4 text-green-400\" />\n    })\n  }\n\n  const handleCompleteChallenge = () => {\n    if (!selectedChallenge) return\n\n    // Generate random loot\n    const lootItem = selectedChallenge.lootPool[Math.floor(Math.random() * selectedChallenge.lootPool.length)]\n    \n    addXP(selectedChallenge.xpReward)\n    addLoot(lootItem)\n    \n    toast.success('Challenge completed!', {\n      description: `You gained ${selectedChallenge.xpReward} XP and found: ${lootItem}!`,\n      icon: <Trophy className=\"w-4 h-4 text-yellow-400\" />\n    })\n\n    setIsInDungeon(false)\n    setSelectedChallenge(null)\n    setCurrentTeam([])\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n      {/* Header */}\n      <header className=\"border-b border-white/10 bg-black/20 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-white hover:bg-white/10\">\n                  <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                  Back to Dashboard\n                </Button>\n              </Link>\n              <div>\n                <h1 className=\"text-2xl font-bold text-white\">Dungeon Challenges</h1>\n                <p className=\"text-sm text-gray-300\">Team up for epic adventures</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"container mx-auto px-4 py-8\">\n        {!isInDungeon ? (\n          <div className=\"space-y-8\">\n            {/* Challenge Selection */}\n            <Card className=\"bg-black/40 border-white/10 text-white\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Sword className=\"w-5 h-5 text-red-400\" />\n                  <span>Available Challenges</span>\n                </CardTitle>\n                <CardDescription className=\"text-gray-300\">\n                  Choose your adventure and get matched with a team\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  {mockChallenges.map((challenge) => {\n                    const { canJoin, reason } = canJoinChallenge(challenge)\n                    \n                    return (\n                      <Card key={challenge.id} className=\"bg-white/5 border-white/10 text-white hover:bg-white/10 transition-all\">\n                        <CardHeader>\n                          <div className=\"flex items-center justify-between\">\n                            <CardTitle className=\"text-lg\">{challenge.name}</CardTitle>\n                            <Badge className={`border ${difficultyColors[challenge.difficulty]}`}>\n                              {challenge.difficulty.charAt(0).toUpperCase() + challenge.difficulty.slice(1)}\n                            </Badge>\n                          </div>\n                          <CardDescription className=\"text-gray-300\">\n                            {challenge.description}\n                          </CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"space-y-4\">\n                          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                            <div>\n                              <span className=\"text-gray-400\">Min Level:</span>\n                              <div className=\"font-semibold\">{challenge.minLevel}</div>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-400\">Duration:</span>\n                              <div className=\"font-semibold\">{challenge.duration}</div>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-400\">Team Size:</span>\n                              <div className=\"font-semibold\">{challenge.minTeamSize}-{challenge.maxTeamSize}</div>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-400\">XP Reward:</span>\n                              <div className=\"font-semibold text-yellow-400\">+{challenge.xpReward}</div>\n                            </div>\n                          </div>\n\n                          <div>\n                            <h4 className=\"text-sm font-semibold mb-2\">Possible Loot:</h4>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {challenge.lootPool.slice(0, 3).map((item, index) => (\n                                <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                                  {item}\n                                </Badge>\n                              ))}\n                              {challenge.lootPool.length > 3 && (\n                                <Badge variant=\"secondary\" className=\"text-xs\">\n                                  +{challenge.lootPool.length - 3} more\n                                </Badge>\n                              )}\n                            </div>\n                          </div>\n\n                          {canJoin ? (\n                            <AlertDialog>\n                              <AlertDialogTrigger asChild>\n                                <Button className=\"w-full bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700\">\n                                  <Sword className=\"w-4 h-4 mr-2\" />\n                                  Enter Challenge\n                                </Button>\n                              </AlertDialogTrigger>\n                              <AlertDialogContent className=\"bg-black/90 border-white/10 text-white\">\n                                <AlertDialogHeader>\n                                  <AlertDialogTitle>Enter {challenge.name}?</AlertDialogTitle>\n                                  <AlertDialogDescription className=\"text-gray-300\">\n                                    You'll be matched with other adventurers for this challenge. \n                                    Are you ready to begin?\n                                  </AlertDialogDescription>\n                                </AlertDialogHeader>\n                                <AlertDialogFooter>\n                                  <AlertDialogCancel className=\"bg-gray-600 hover:bg-gray-700 text-white border-gray-500\">\n                                    Cancel\n                                  </AlertDialogCancel>\n                                  <AlertDialogAction \n                                    onClick={() => handleJoinChallenge(challenge)}\n                                    className=\"bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700\"\n                                  >\n                                    Enter Challenge\n                                  </AlertDialogAction>\n                                </AlertDialogFooter>\n                              </AlertDialogContent>\n                            </AlertDialog>\n                          ) : (\n                            <Button disabled className=\"w-full bg-gray-600 text-gray-400 cursor-not-allowed\">\n                              {reason}\n                            </Button>\n                          )}\n                        </CardContent>\n                      </Card>\n                    )\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        ) : (\n          <DungeonEvent \n            challenge={selectedChallenge!}\n            team={currentTeam}\n            onComplete={handleCompleteChallenge}\n          />\n        )}\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}